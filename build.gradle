// project-wide `build.gradle`

plugins {
    alias(libs.plugins.android.application) apply false
    // https://developers.google.com/maps/documentation/android-sdk/secrets-gradle-plugin
    alias(libs.plugins.mapsplatform.secrets) apply false
}

// Build Configurations
project.ext.set('archiveBuildTypes', ['release', 'debug'])

// Version Settings, loaded from version.properties
def version = new Properties()
version.load(new FileInputStream(rootProject.file('version.properties')))
project.ext.set('applicationId', version['applicationId'])
project.ext.set('versionName',   version['versionName'])
project.ext.set('versionCode',   Integer.parseInt(version['versionCode']))
project.ext.set('compileSdk',    Integer.parseInt(version['compileSdkVersion']))
project.ext.set('targetSdk',     Integer.parseInt(version['targetSdkVersion']))
project.ext.set('minSdk',        Integer.parseInt(version['minSdkVersion']))

allprojects {

    /** Runtime JAR files in the classpath should have the same version. */
    configurations.configureEach {
        resolutionStrategy.eachDependency { details ->
            def requested = details.requested
            if (requested.group == 'org.jetbrains.kotlin') {
                List<String> list = ['kotlin-stdlib', 'kotlin-stdlib-jdk7', 'kotlin-stdlib-jdk8', 'kotlin-stdlib-common']
                if (list.contains(requested.name)) {
                    details.useVersion "1.9.22"
                }
            }
        }
    }

    // when projects were evaluated
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile).tap {
            configureEach {
                options.compilerArgs << "-Xmaxerrs" << "2000" << "-Xmaxwarns" << "2000"
                options.compilerArgs << "-Xlint:unchecked" << '-Xlint:deprecation'
                // << "-Xlint:-cast" << "-Xlint:all"
            }
        }
    }
}
